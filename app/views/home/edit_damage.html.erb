<h4 class="mb-4">Editar daño vehículo #<%= @vehicle.id %></h4>

<div class="text-center border p-2 rounded-3 mb-3">
  <canvas id="canvas" width="500"></canvas>
  <div class="text-center">
    <button class="btn btn-sm btn-outline-primary disabled" id="move" title="Mover">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-hand-move" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M8 13v-8.5a1.5 1.5 0 0 1 3 0v7.5"/>
        <path d="M11 11.5v-2a1.5 1.5 0 0 1 3 0v2.5"/>
        <path d="M14 10.5a1.5 1.5 0 0 1 3 0v1.5"/>
        <path d="M17 11.5a1.5 1.5 0 0 1 3 0v4.5a6 6 0 0 1 -6 6h-2h.208a6 6 0 0 1 -5.012 -2.7l-.196 -.3c-.312 -.479 -1.407 -2.388 -3.286 -5.728a1.5 1.5 0 0 1 .536 -2.022a1.867 1.867 0 0 1 2.28 .28l1.47 1.47"/>
        <path d="M2.541 5.594a13.487 13.487 0 0 1 2.46 -1.427"/>
        <path d="M14 3.458c1.32 .354 2.558 .902 3.685 1.612"/>
      </svg>
    </button>

    <button class="btn btn-sm btn-outline-primary" id="pencil" title="Pintar">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-pencil" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4"/>
        <path d="M13.5 6.5l4 4"/>
      </svg>
    </button>

    <button class="btn btn-sm btn-outline-primary" id="eraser" title="Borrar">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-eraser" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M19 20h-10.5l-4.21 -4.3a1 1 0 0 1 0 -1.41l10 -10a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41l-9.2 9.3"/>
        <path d="M18 13.3l-6.3 -6.3"/>
      </svg>
    </button>

    <button class="btn btn-sm btn-outline-primary" id="circle" title="Círculo">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-circle" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0"/>
      </svg>
    </button>

    <button class="btn btn-sm btn-outline-danger" id="clear" title="Limpiar">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-square-toggle" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M12 2l0 20"/>
        <path d="M14 20h-8a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h8"/>
        <path d="M20 6a2 2 0 0 0 -2 -2"/>
        <path d="M18 20a2 2 0 0 0 2 -2"/>
        <path d="M20 10l0 4"/>
      </svg>
    </button>
  </div>
</div>

<%= form_with model: @damage, url: save_damage_path, method: :post do |form| %>
  <div class="d-flex justify-content-between">
    <%= form.hidden_field :data %>
    <%= link_to "Cancelar", root_path, class: 'btn btn-outline-primary' %>
    <%= form.submit "Guardar", class: 'btn btn-outline-primary', id: :save %>
  </div>
<% end %>

<script type="text/javascript" charset="utf-8">
    $(() => {
        let canvas = new fabric.Canvas('canvas');
        let move = $('#move');
        let pencil = $('#pencil');
        let eraser = $('#eraser');
        let circle = $('#circle');
        let clear = $('#clear');
        let save = $('#save');

        canvas.freeDrawingBrush.width = 10;

        !!<%= @damage.data.present? %> ? loadCarDamage() : loadImage();

        function loadImage() {
            fabric.Image.fromURL("<%= image_path 'car.svg' %>", (img) => {
                img.selectable = false;
                img.scaleToWidth(500);
                canvas.add(img);
                canvas.setHeight(img.height * img.scaleY);
            });
        }

        function loadCarDamage() {
            let data = document.createElement('div');
            data.innerHTML = "<%= @damage.data %>"
            let json = JSON.parse(data.innerHTML);
            canvas.loadFromJSON(json, () => {
                canvas.setHeight(canvas.getObjects()[0].height * canvas.getObjects()[0].scaleY);
                canvas.getObjects()[0].selectable = false;
            });
        }

        save.click(() => {
            let json = canvas.toJSON();
            let data = $('#damage_data')
            data.val(JSON.stringify(json));
        });

        move.click(function () {
            $(this).addClass('disabled');
            pencil.removeClass('disabled');
            eraser.removeClass('disabled');
            circle.removeClass('disabled');
            canvas.isDrawingMode = false;
        });

        pencil.click(function () {
            $(this).addClass('disabled');
            move.removeClass('disabled');
            eraser.removeClass('disabled');
            circle.removeClass('disabled');
            canvas.isDrawingMode = true;
            canvas.freeDrawingBrush.color = 'rgba(255,0,0,.5)';
        });

        eraser.click(function () {
            $(this).addClass('disabled');
            move.removeClass('disabled');
            pencil.removeClass('disabled');
            circle.removeClass('disabled');
            canvas.isDrawingMode = false;
        });

        circle.click(function () {
            $(this).addClass('disabled');
            move.removeClass('disabled');
            pencil.removeClass('disabled');
            eraser.removeClass('disabled');
            canvas.isDrawingMode = false;
        })

        clear.click(function () {
            pencil.removeClass('disabled');
            eraser.removeClass('disabled');
            circle.removeClass('disabled');
            canvas.clear();
            loadImage();
        });

        canvas.on('mouse:down', (e) => {
            let target = e.target;
            if (target && !target.isType('image') && eraser.hasClass('disabled'))
                canvas.remove(target);

            if (circle.hasClass('disabled')) {
                let c = new fabric.Circle({
                    radius: 20,
                    fill: 'rgba(255,0,0,.5)',
                    originX: 'center',
                    originY: 'center',
                    left: e.pointer.x,
                    top: e.pointer.y
                });
                canvas.add(c);
            }
        });
    })
</script>